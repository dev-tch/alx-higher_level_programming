test cases 7-base_geometry.py
================================
module define class BaseGeometry with two methods area(self) &&
integer_validator(self, name, value)

test_01
======
import module && class

::
    >>> my_mod = __import__("7-base_geometry")
    >>> BaseGeometry = my_mod.BaseGeometry

test_02
=======
test docstring

::
    >>> len(my_mod.__doc__) > 1
    True
    >>> len(my_mod.BaseGeometry.__doc__) > 1
    True
    >>> len(my_mod.BaseGeometry.area.__doc__) > 1
    True
    >>> len(my_mod.BaseGeometry.integer_validator.__doc__) > 1
    True

test_03
=======
test integer_validator

::
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("my_int", 12)
    >>> bg.integer_validator("width", 89)
    >>> bg.integer_validator("name", "John")
    Traceback (most recent call last):
    TypeError: name must be an integer

test_04
=====
    >>> bg.area()
    Traceback (most recent call last):
    Exception: area() is not implemented
