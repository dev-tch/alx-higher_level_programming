test cases for module 1-my_list.py
==================================
this module test class MyList that inherit  list object

test_01
=======
import module

::
    >>> MyList = __import__('1-my_list').MyList

test_01
========
my list is of type list

::
	  >>> issubclass(MyList, list)
	  True

test_02
=======
object  MyList  is empty

::
	  >>> l = MyList()
	  >>> l.print_sorted()
	  []

test_03
=======
test fill original list of my custom class MYList

::
    >>> my_list = MyList()
    >>> my_list.append(1)
    >>> my_list.append(4)
    >>> my_list.append(2)
    >>> my_list.append(3)
    >>> my_list.append(5)
    >>> print(my_list)
    [1, 4, 2, 3, 5]

test_04
=======
test sorted list using method print_sorted of my custom class MYList

::
    >>> my_list.print_sorted()
    [1, 2, 3, 4, 5]

test_05
=======
original list of my custom class must be intact

::
    >>> print(my_list)
    [1, 4, 2, 3, 5]

test_06
=======
test list reversed

	  >>> l = MyList()
	  >>> l.append(4)
	  >>> l.append(3)
	  >>> l.append(2)
	  >>> l.append(1)
	  >>> print(l)
	  [4, 3, 2, 1]
	  >>> l.print_sorted()
	  [1, 2, 3, 4]
	  >>> print(l)
	  [4, 3, 2, 1]

test_07
======
invalid arguments

::
    >>> l.print_sorted(1)
    Traceback (most recent call last):
    ...
    TypeError: print_sorted() takes 1 positional argument but 2 were given